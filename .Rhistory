other_var_small <- other_var_raw %>%
select(!ends_with("M"))
rm(other_var_raw)
# removing the E from the end of the variable names
colnames(other_var_small)[3:length(colnames(other_var_small))-1] <-
substr(colnames(other_var_small)[3:length(colnames(other_var_small))-1], 1, nchar(colnames(other_var_small)[3:length(colnames(other_var_small))-1])-1)
# expand the categories into new table with variables for each column
# initializing labeling convention
col_var_names <- c()
for(i in 1:24) {
col_var_names[i] <- paste0("var.", i)
}
# 24 was chosen through looking at the data, but there's probably a way to soft-code it
# expanding out the var names into separate cells
census_groups_expanded <- left_join(census_groups,separate(census_groups, col = labels, into = col_var_names, sep = ","),
by = "var_names")
# add value columns
# do later, have to do figure other things out first
# making addition columns
div_groups_labels <- census_groups_expanded %>%
select(-labels) %>%
t() %>% as_tibble() %>%
row_to_names(row_number = 1)
# adding the calculated rows to the census data
# initializing the df
other_var_groups <- tibble(GEOID = other_var_small$GEOID,
NAME = other_var_small$NAME,
geometry = other_var_small$geometry)
# selecting only those of interest and adding them
grouping_fxn <- function(div_label) {
x <- which(colnames(div_groups_labels) == paste0(div_label))
# this basically selects the relevant census variables related to each group
# and then adds them
return(other_var_small %>%
as_tibble() %>%
select(
colnames(other_var_small)[colnames(other_var_small) %in% (div_groups_labels[,x] %>% array())[[1]]]
) %>%
mutate(val = rowSums(across())) %>% select(val) %>%
rename(!!sym(div_label) := val)
)
}
for(i in 1:length(colnames(div_groups_labels))) {
other_var_groups <- cbind(other_var_groups, grouping_fxn(colnames(div_groups_labels)[i]))
# colnames(other_var_groups)[i+3] <- colnames(div_groups_labels)[i]
}
View(other_var_groups)
# initializing the df
other_var_groups <- tibble(GEOID = other_var_small$GEOID,
NAME = other_var_small$NAM, # I don't know why it's doign this but
geometry = other_var_small$geometry)
for(i in 1:length(colnames(div_groups_labels))) {
other_var_groups <- cbind(other_var_groups, grouping_fxn(colnames(div_groups_labels)[i]))
# colnames(other_var_groups)[i+3] <- colnames(div_groups_labels)[i]
}
View(other_var_groups)
View(categories)
View(other_var_groups)
grepl("pob", colnames(other_var_groups))
View(categories)
paste0(categories$title, "_", categories$group_name)
categories$group_labels <- paste0(categories$title, "_", categories$group_name)
grepl("educ_all", colnames(other_var_groups))
unique(categories$group_labels)
other_var_groups %>% select(
grepl("educ_all", colnames(other_var_groups)))
grepl(contains("educ_all"))
other_var_groups %>% select(
other_var_groups %>%
select(contains("educ_all"))
)
?select
other_var_groups %>%
select(starts_with("educ_all"))
# separating the df into the general demographic variables
# NOTE: this part will be hard coded
df_educ <- other_var_groups %>%
select(starts_with("educ"))
df_pob <- other_var_groups %>%
select(starts_with("pob"))
other_var_groups %>%
select(c(starts_with("educ"), NAME))
# separating the df into the general demographic variables
# NOTE: this part will be hard coded
df_educ <- other_var_groups %>%
select(c(starts_with("educ"), GEOID, NAME, geometry))
df_pob <- other_var_groups %>%
select(c(starts_with("pob"), GEOID, NAME, geometry))
unique(categories$group_labels)
df_educ %>%
select(contains("all"))
View(df_educ)
df_educ %>%
select(c(contains("all"), ends_with("Total")))
df_pob %>%
select(c(contains("nat_for"), ends_with("Total")))
df_pob %>%
select(contains("nat_for"))
df_pob %>%
select(ends_with("Total"))
df_pob %>%
select(contains("nat_for"))
?across
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
mutate(calc = rowSums(across()))
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
mutate(calc = rowSums(across(!ends_with("Total"))))
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
mutate(calc = div_prop(across(!ends_with("Total")), across(ends_with("Total"))))
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
mutate(calc = across(div_prop(!ends_with("Total"), ends_with("Total"))))
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
# mutate(calc = across(div_prop(!ends_with("Total"), ends_with("Total"))))
mutate(calc = div_prop(across(!ends_with("Total")), across(ends_with("Total"))))
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
mutate(calc = div_prop(!ends_with("Total"), ends_with("Total")))
?enquo
total <- df_pob %>%
select(ends_with("Total"))
df_pob %>%
select(contains("nat_for")) %>%
mutate(calc = div_prop(across(), total))
div_prop() <- div_prop(total_pop = total)
apply(df_educ, 1, sum)
apply(df_educ[!1:3], 1, sum)
apply(df_educ[!1:3], 2, sum)
apply(df_educ[!(1:3)], 2, sum)
df_educ[!(1:3)]
View(df_educ)
df_educ <- other_var_groups %>%
select(c(GEOID, NAME, geometry, starts_with("educ")))
df_pob <- other_var_groups %>%
select(c(GEOID, NAME, geometry, starts_with("pob")))
apply(df_educ[!(1:3)], 2, sum)
df_educ[!(1:3)]
View(df_educ)
df_educ[!1:3]
df_educ[1:3]
apply(df_educ[4:6], 2, sum)
?rowwise
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
rowwise()
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
rowwise() %>%
mutate(calc = max())
)
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
rowwise() %>%
mutate(calc = sum)
?c_across
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
mutate(Total = ends_with("Total"))
df_pob %>%
select(c(contains("nat_for"), ends_with("Total")))
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
rename(total = ends_with("Total"))
mutate(calc = div_prop(c_across(!total), total)
)
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
rename(total = ends_with("Total")) %>%
rowwise() %>%
mutate(calc = div_prop(c_across(!total), total))
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
rename(total = ends_with("Total")) %>%
rowwise() %>%
mutate(c(calc.1, calc.2) = div_prop(c_across(!total), total))
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
rename(total = ends_with("Total")) %>%
across(!total, sum)
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
rename(total = ends_with("Total")) %>%
mutate(calc = across(!total, sum))
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
rename(total = ends_with("Total"))
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
rename(total = ends_with("Total")) %>%
mutate(calc = across(!total, n))
df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
rename(total = ends_with("Total")) %>%
mutate(calc = across(!total, max))
slice <- df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
rename(total = ends_with("Total"))
slice <- df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
rename(total = ends_with("Total"))
for(i in 1:(ncol(slice)-1)) {
slice <- cbind(slice, div_prop(slice[, i], slice$total))
colnames(slice)[ncol(slice)+i] <- paste0(colnames(slice)[i], "_calc")
}
i <- 1
cbind(slice, div_prop(slice[, i], slice$total))
slice <- df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
rename(total = ends_with("Total"))
cbind(slice, div_prop(slice[, i], slice$total))
ncol(slice)
colnames(slice)[ncol(slice)+i]
slice <- cbind(slice, div_prop(slice[, i], slice$total))
colnames(slice)[ncol(slice)+i]
ncol(slice)
ncol(slice)+i
rm(i)
slice <- df_pob %>%
select(c(contains("nat_for"), ends_with("Total"))) %>%
rename(total = ends_with("Total"))
for(i in 1:(ncol(slice)-1)) {
slice <- cbind(slice, div_prop(slice[, i], slice$total))
colnames(slice)[ncol(slice)] <- paste0(colnames(slice)[i], "_calc")
}
View(slice)
slice <- df_pob %>%
rename(total = ends_with("Total"))
for(i in 1:(ncol(slice)-1)) {
slice <- cbind(slice, div_prop(slice[, i], slice$total))
colnames(slice)[ncol(slice)] <- paste0(colnames(slice)[i], "_calc")
}
df_pob %>%
rename(total = ends_with("Total")) %>%
select(!C(GEOID, NAME, geometry))
df_pob %>%
rename(total = ends_with("Total")) %>%
select(!c(GEOID, NAME, geometry))
slice <- df_pob %>%
rename(total = ends_with("Total")) %>%
select(!c(GEOID, NAME, geometry))
for(i in 1:(ncol(slice)-1)) {
slice <- cbind(slice, div_prop(slice[, i], slice$total))
colnames(slice)[ncol(slice)] <- paste0(colnames(slice)[i], "_calc")
}
View(slice)
slice %>% t() %>% tibble()
c <- slice %>% t() %>% tibble()
View(c)
View(categories)
categories["var_names"]
categories[c("var_names", "group_labels")]
c <- slice %>% t() %>% tibble() %>% rownames_to_column()
View(c)
slice %>% t() %>% tibble() %>% rownames_to_column("VALUE")
rownames(c)
slice <- df_pob %>%
rename(total = ends_with("Total")) %>%
select(!c(GEOID, NAME, geometry))
for(i in 1:(ncol(slice)-1)) {
slice <- cbind(slice, div_prop(slice[, i], slice$total))
colnames(slice)[ncol(slice)] <- paste0(colnames(slice)[i], "_calc")
}
c <- slice %>% t() %>% tibble() %>% rownames_to_column("var_names")
c <- slice %>% t() %>% tibble()
slice %>% t()
slice %>% t() %>% as_tibble()
slice %>% t() %>% tibble()
slice %>% t() %>% as_tibble() %>% row.names()
slice %>% t() %>% as_tibble() %>% row.names(colnames(slice))
slice %>% t() %>% as_tibble() %>% rbind(colnames(slice))
slice %>% t() %>% as_tibble() %>% cbind(colnames(slice))
slice %>% t() %>% as_tibble() %>% mutate(var_names = colnames(slice))
slice %>% t() %>% as_tibble() %>%
mutate(var_names = colnames(slice)) %>%
right_join(categories[c("var_names", "group_labels")], by = "var_names")
c<- slice %>% t() %>% as_tibble() %>%
mutate(var_names = colnames(slice)) %>%
right_join(categories[c("var_names", "group_labels")], by = "var_names")
View(c)
c<- slice %>% t() %>% as_tibble() %>%
mutate(var_names = colnames(slice)) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names")
slice %>% t() %>% as_tibble() %>%
mutate(var_names = colnames(slice))
c<- slice %>% t() %>% as_tibble() %>%
mutate(var_names = colnames(slice))
slice <- df_pob %>%
rename(total = ends_with("Total")) %>%
select(!c(GEOID, NAME, geometry))
for(i in 1:(ncol(slice)-1)) {
slice <- cbind(slice, div_prop(slice[, i], slice$total))
colnames(slice)[ncol(slice)] <- paste0(colnames(slice)[i], "_calc")
}
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble()
slice %>% select(ends_with("calc"))
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = colnames(slice)) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names")
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble()
colnames(slice)[ends_with("calc")]
# variable names
grepl("calc$", colnames(slice))
# variable names
colnames(grepl("calc$", colnames(slice)))
# variable names
colnames(slice)[grepl("calc$", colnames(slice))]
# variable names
colnames(slice)[!grepl("calc$", colnames(slice))]
# variable names
var_names <- colnames(slice)[!grepl("calc$", colnames(slice))]
# variable names
group_var_names <- colnames(slice)[!grepl("calc$", colnames(slice))]
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names")
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble()
c <- slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble()
View(c)
View(slice)
slice <- df_pob %>%
rename(total = ends_with("Total")) %>%
select(!c(GEOID, NAME, geometry))
for(i in 1:(ncol(slice))) {
slice <- cbind(slice, div_prop(slice[, i], slice$total))
colnames(slice)[ncol(slice)] <- paste0(colnames(slice)[i], "_calc")
}
# variable names
group_var_names <- colnames(slice)[!grepl("calc$", colnames(slice))]
c <- slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names")
View(c)
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names)
c <- slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names)
View(c)
View(c)
rm(c)
c <- slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names)
View(c)
c <- slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names")
c <- slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels) %>%
summarise(div_sum = sum)
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels)
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels) %>%
summarise(n = sum())
unique(c$group_labels)
which(is.na(c$group_labels))
View(categories)
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels) %>%
summarise(n = max())
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels) %>%
summarise(n = n())
typeof(c$V2)
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels) %>%
summarise(n = sum(across()))
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels) %>%
summarise(across(sum))
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels) %>%
summarise(across(, list=(sum)))
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels) %>%
summarise(across(, list=(sum = sum)))
c<- slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels) %>%
summarise(across(, list=(sum = sum)))
View(c)
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels) %>%
summarise(across(everything(), list=(sum = sum)))
mtcars %>%
group_by(cyl) %>%
summarise(across(everything(), sum))
mtcars
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels) %>%
summarise(across(everything(), list=(sum = sum)))
View(c)
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels) %>%
summarise(across(everything(), list=(sum = sum(na.rm = T))))
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels)
mtcars
mtcars %>%
group_by(cyl) %>%
summarise(across(everything(), sum))
c<- slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels) %>%
summarise(across(everything(), list=(sum)))
View(c)
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels) %>%
summarise(across(everything(), list=(sum)))
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
group_by(group_labels) %>%
summarise(across(everything(), list=(n())))
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
dplyr::group_by(group_labels) %>%
dplyr::summarise(across(everything(), list=(n())))
dplyr::summarise(across(everything(), list=(sum))
)
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
dplyr::group_by(group_labels) %>%
dplyr::summarise(sum = sum())
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
dplyr::group_by(group_labels) %>%
dplyr::summarise(across(everything(), sum))
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
dplyr::group_by(group_labels) %>%
dplyr::summarise(across(everything(), list = sum))
slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names") %>%
dplyr::group_by(group_labels) %>%
dplyr::summarise(across(everything(), list = sum), .groups = 'drop')
c <- slice %>% select(ends_with("calc")) %>%
t() %>% as_tibble() %>%
mutate(var_names = group_var_names) %>%
left_join(categories[c("var_names", "group_labels")], by = "var_names")
c$group_labels
