#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels <- pie_labels %>% factor(levels = pie_labels, ordered = T)
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
citywide_sample <- tibble(Categories = pie_labels, Citywide = pie_values)
pie_chart <- plot_ly(labels = ~pie_labels, values = ~pie_values,
type = 'pie', sort = F,
marker = list(colors = c("#fdb462","#8dd3c7","#ffffb3","#bebada","#b3de69",
"#fccde5","#d9d9d9","#9c755f","#d37295","#00ffd0","#9467bd"))) %>%
layout(title = paste0(selected_value),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
legend = list(entrywidth = 45, entrywidthmode = "fraction"))
pie_chart
}
PIE_CHART_FUNC(input, pob_diversity_neighborhood)
PIE_CHART_FUNC <- function(input, neigh_df){
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels <- pie_labels %>% factor(levels = pie_labels, ordered = T)
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
citywide_sample <- tibble(Categories = pie_labels, Citywide = pie_values)
pie_chart <- plot_ly(labels = ~pie_labels, values = ~pie_values,
type = 'pie', sort = F,
marker = list(colors = c("#fdb462","#8dd3c7","#ffffb3","#bebada","#b3de69",
"#fccde5","#d9d9d9","#9c755f","#d37295","#00ffd0","#9467bd"))) %>%
layout(title = paste0(selected_value),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
legend = list(entrywidth = 4, entrywidthmode = "fraction"))
pie_chart
}
PIE_CHART_FUNC(input, pob_diversity_neighborhood)
PIE_CHART_FUNC <- function(input, neigh_df){
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels <- pie_labels %>% factor(levels = pie_labels, ordered = T)
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
citywide_sample <- tibble(Categories = pie_labels, Citywide = pie_values)
pie_chart <- plot_ly(labels = ~pie_labels, values = ~pie_values,
type = 'pie', sort = F,
marker = list(colors = c("#fdb462","#8dd3c7","#ffffb3","#bebada","#b3de69",
"#fccde5","#d9d9d9","#9c755f","#d37295","#00ffd0","#9467bd"))) %>%
layout(title = paste0(selected_value),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
legend = list(itemwidth = 15))
pie_chart
}
PIE_CHART_FUNC(input, pob_diversity_neighborhood)
pie_labels
pie_labels[6]
pie_labels[6] <- "Born outside the U.S. <br> (Puerto Rico, U.S. territories, <br> or born abroad of American parents)"
pie_labels[[6]]
pie_labels[6][1]
pie_labels[6]
pie_labels
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels[6]
pie_labels[6][1]
pie_labels[6][1] <- "Born outside the U.S. <br> (Puerto Rico, U.S. territories, <br> or born abroad of American parents)"
pie_chart <- plot_ly(labels = ~pie_labels, values = ~pie_values,
type = 'pie', sort = F,
marker = list(colors = c("#fdb462","#8dd3c7","#ffffb3","#bebada","#b3de69",
"#fccde5","#d9d9d9","#9c755f","#d37295","#00ffd0","#9467bd"))) %>%
layout(title = paste0(selected_value),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
legend = list(itemwidth = 15))
pie_chart
length(pie_labels)
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
gsub("(.{5})", "\\1 ", pie_labels[6][1])
?gsub
gsub("( {5})", "\\1 ", pie_labels[6][1])
gsub("( {5})", "<br> ", pie_labels[6][1])
gsub("(//1{5})", "<br> ", pie_labels[6][1])
gsub("(//{5})", "d", pie_labels[6][1])
gsub("(//{5})", "AAA", pie_labels[6][1])
gsub("(\{5})", "AAA", pie_labels[6][1])
gsub("(\\{5})", "AAA", pie_labels[6][1])
gsub("\\{5}", "AAA", pie_labels[6][1])
gsub("\\", "AAA", pie_labels[6][1])
gsub("\\\", "AAA", pie_labels[6][1])
gsub("\\1", "AAA", pie_labels[6][1])
gsub("\\.", "AAA", pie_labels[6][1])
gsub("\\.", "H", pie_labels[6][1])
gsub("\\.", "_", pie_labels[6][1])
gsub(".\\.", "_", pie_labels[6][1])
gsub(".\\", "_", pie_labels[6][1])
gsub(".\\.", "_", pie_labels[6][1])
sub("//.", "_", pie_labels[6][1])
sub("\\.", "_", pie_labels[6][1])
strwrap(pie_labels[6][1], width = 12)
strwrap(pie_labels[6][1], width = 1)
strwrap(pie_labels[6][1], width = 25)
strwrap(pie_labels[6][1], width = 50)
strwrap(pie_labels[6][1], width = 30)
strwrap(pie_labels[6][1], width = 25)
strwrap(pie_labels[6][1], width = 26)
strwrap(pie_labels[6][1], width = 28)
strwrap(pie_labels[6][1], width = 29)
strwrap(pie_labels[6][1], width = 30)
strwrap(pie_labels[6][1], width = 25)
paste(strwrap(pie_labels[6][1], width = 25), collapse = "<br>")
# this inserts breaks every 25 pixels
pie_legend_label_fxn <- function(pie_labels) {
for(i in 1:length(pie_labels)) {
pie_labels[i][1] <- paste(strwrap(pie_labels[i][1], width = 25), collapse = "<br>")
}
}
PIE_CHART_FUNC <- function(input, neigh_df){
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels <- pie_labels %>% factor(levels = pie_labels, ordered = T) %>% pie_legend_label_fxn()
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
citywide_sample <- tibble(Categories = pie_labels, Citywide = pie_values)
pie_chart <- plot_ly(labels = ~pie_labels, values = ~pie_values,
type = 'pie', sort = F,
marker = list(colors = c("#fdb462","#8dd3c7","#ffffb3","#bebada","#b3de69",
"#fccde5","#d9d9d9","#9c755f","#d37295","#00ffd0","#9467bd"))) %>%
layout(title = paste0(selected_value),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
legend = list(itemwidth = 15))
pie_chart
}
PIE_CHART_FUNC(input, pob_diversity_neighborhood)
PIE_CHART_FUNC <- function(input, neigh_df){
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ") %>% pie_legend_label_fxn()
pie_labels <- pie_labels %>% factor(levels = pie_labels, ordered = T)
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
citywide_sample <- tibble(Categories = pie_labels, Citywide = pie_values)
pie_chart <- plot_ly(labels = ~pie_labels, values = ~pie_values,
type = 'pie', sort = F,
marker = list(colors = c("#fdb462","#8dd3c7","#ffffb3","#bebada","#b3de69",
"#fccde5","#d9d9d9","#9c755f","#d37295","#00ffd0","#9467bd"))) %>%
layout(title = paste0(selected_value),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
legend = list(itemwidth = 15))
pie_chart
}
PIE_CHART_FUNC(input, pob_diversity_neighborhood)
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_legend_label_fxn(pie_labels)
pie_labels
i <- 6
paste(strwrap(pie_labels[i][1], width = 25), collapse = "<br>")
pie_labels[i]
pie_labels[i][1]
pie_labels[i][1] <- paste(strwrap(pie_labels[i][1], width = 25), collapse = "<br>")
pie_labels[i][1]
length(pie_labels)
pie_legend_label_fxn(pie_labels)
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
for(i in 1:length(pie_labels)) {
pie_labels[i][1] <- paste(strwrap(pie_labels[i][1], width = 25), collapse = "<br>")
}
pie_labels
pie_labels %>% pie_legend_label_fxn() %>% factor(levels = pie_labels, ordered = T)
PIE_CHART_FUNC <- function(input, neigh_df){
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels <- pie_labels %>% pie_legend_label_fxn() %>% factor(levels = pie_labels, ordered = T)
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
citywide_sample <- tibble(Categories = pie_labels, Citywide = pie_values)
pie_chart <- plot_ly(labels = ~pie_labels, values = ~pie_values,
type = 'pie', sort = F,
marker = list(colors = c("#fdb462","#8dd3c7","#ffffb3","#bebada","#b3de69",
"#fccde5","#d9d9d9","#9c755f","#d37295","#00ffd0","#9467bd"))) %>%
layout(title = paste0(selected_value),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
legend = list(itemwidth = 15))
pie_chart
}
PIE_CHART_FUNC(input, pob_diversity_neighborhood)
pie_chart <- plot_ly(labels = ~pie_labels, values = ~pie_values,
type = 'pie', sort = F,
marker = list(colors = c("#fdb462","#8dd3c7","#ffffb3","#bebada","#b3de69",
"#fccde5","#d9d9d9","#9c755f","#d37295","#00ffd0","#9467bd"))) %>%
layout(title = paste0(selected_value),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
legend = list(itemwidth = 15))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels <- pie_labels %>% pie_legend_label_fxn() %>% factor(levels = pie_labels, ordered = T)
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
citywide_sample <- tibble(Categories = pie_labels, Citywide = pie_values)
as.numeric(as.vector(BOs_DF[1,]))
neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
View(pob_diversity_neighborhood)
neigh_df <- pob_diversity_neighborhood
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels <- pie_labels %>% pie_legend_label_fxn() %>% factor(levels = pie_labels, ordered = T)
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
citywide_sample <- tibble(Categories = pie_labels, Citywide = pie_values)
pie_chart <- plot_ly(labels = ~pie_labels, values = ~pie_values,
type = 'pie', sort = F,
marker = list(colors = c("#fdb462","#8dd3c7","#ffffb3","#bebada","#b3de69",
"#fccde5","#d9d9d9","#9c755f","#d37295","#00ffd0","#9467bd"))) %>%
layout(title = paste0(selected_value),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
legend = list(itemwidth = 15))
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
as.numeric(as.vector(BOs_DF[1,]))
tibble(Categories = pie_labels, Citywide = pie_values)
pie_labels
pie_value
pie_values
tibble(Categories = pie_labels, Citywide = pie_values)
# this inserts breaks every 25 pixels
pie_legend_label_fxn <- function(pie_labels) {
for(i in 1:length(pie_labels)) {
pie_labels[i] <- paste(strwrap(pie_labels[i][1], width = 25), collapse = "<br>")
}
}
neigh_df <- pob_diversity_neighborhood
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels <- pie_labels %>% pie_legend_label_fxn() %>% factor(levels = pie_labels, ordered = T)
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
citywide_sample <- tibble(Categories = pie_labels, Citywide = pie_values)
pie_labels
pie_labels[6]
# this inserts breaks every 25 pixels
pie_legend_label_fxn <- function(pie_labels) {
for(i in 1:length(pie_labels)) {
pie_labels[i][1] <- paste(strwrap(pie_labels[i][1], width = 25), collapse = "<br>")
}
}
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels <- pie_labels %>% pie_legend_label_fxn() %>% factor(levels = pie_labels, ordered = T)
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
pie_labels[6]
i <- 6
paste(strwrap(pie_labels[i][1], width = 25), collapse = "<br>")
rm(list = ls())
hh_diversity_neighborhood <- readRDS("~/Documents/GitHub/Diversity-Map/output/hh_diversity_neighborhood.RDS")
race_diversity_neighborhood <- readRDS("~/Documents/GitHub/Diversity-Map/output/race_diversity_neighborhood.RDS")
View(race_diversity_neighborhood)
PIE_CHART_FUNC <- function(input, neigh_df){
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels <- pie_labels %>% pie_legend_label_fxn() %>% factor(levels = pie_labels, ordered = T)
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
citywide_sample <- tibble(Categories = pie_labels, Citywide = pie_values)
pie_chart <- plot_ly(labels = ~pie_labels, values = ~pie_values,
type = 'pie', sort = F,
marker = list(colors = c("#fdb462","#8dd3c7","#ffffb3","#bebada","#b3de69",
"#fccde5","#d9d9d9","#9c755f","#d37295","#00ffd0","#9467bd"))) %>%
layout(title = paste0(selected_value),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
legend = list(itemwidth = 15))
pie_chart
}
# this inserts breaks every 25 pixels
pie_legend_label_fxn <- function(pie_labels) {
for(i in 1:length(pie_labels)) {
pie_labels[i][1] <- paste(strwrap(pie_labels[i][1], width = 25), collapse = "<br>")
}
}
PIE_CHART_FUNC("hispanic designation", race_diversity_neighborhood)
PIE_CHART_FUNC("seven", race_diversity_neighborhood)
neigh_df <- race_diversity_neighborhood
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
input <- "seven"
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
input <- "val_race_seven"
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
selected_value
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels <- pie_labels %>% pie_legend_label_fxn() %>% factor(levels = pie_labels, ordered = T)
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
PIE_CHART_FUNC("val_race_seven", race_diversity_neighborhood)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
View(BOs_DF)
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels
i <- 3
paste(strwrap(pie_labels[i][1], width = 25), collapse = "<br>")
pie_labels[i][1] <- paste(strwrap(pie_labels[i][1], width = 25), collapse = "<br>")
pie_labels[i][1]
pie_labels[i]
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_legend_label_fxn(pie_labels)
pie_labels <- pie_labels %>% factor(levels = pie_labels, ordered = T)
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
citywide_sample <- tibble(Categories = pie_labels, Citywide = pie_values)
pie_chart <- plot_ly(labels = ~pie_labels, values = ~pie_values,
type = 'pie', sort = F,
marker = list(colors = c("#fdb462","#8dd3c7","#ffffb3","#bebada","#b3de69",
"#fccde5","#d9d9d9","#9c755f","#d37295","#00ffd0","#9467bd"))) %>%
layout(title = paste0(selected_value),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
legend = list(itemwidth = 15))
pie_chart
pie_labels
# this inserts breaks every 25 pixels
pie_legend_label_fxn <- function(pie_label_name) {
return(paste(strwrap(pie_label_name, width = 25), collapse = "<br>"))
}
rm(list = ls(0))
rm(list = ls())
race_diversity_neighborhood <- readRDS("~/Documents/GitHub/Diversity-Map/output/race_diversity_neighborhood.RDS")
PIE_CHART_FUNC("val_race_seven", race_diversity_neighborhood)
neigh_df <- race_diversity_neighborhood
input <- "val_race_seven"
# this inserts breaks every 25 pixels
pie_legend_label_fxn <- function(pie_label_name) {
return(paste(strwrap(pie_label_name, width = 25), collapse = "<br>"))
}
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
lapply(pie_labels, pie_legend_label_fxn)
pie_labels
sapply(pie_labels, pie_legend_label_fxn)
apply(pie_labels, pie_legend_label_fxn)
lapply(pie_labels, pie_legend_label_fxn)
lapply(pie_labels, pie_legend_label_fxn) %>% unlist()
PIE_CHART_FUNC <- function(input, neigh_df){
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels <- lapply(pie_labels, pie_legend_label_fxn) %>% unlist()
pie_labels <- pie_labels %>% factor(levels = pie_labels, ordered = T)
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
citywide_sample <- tibble(Categories = pie_labels, Citywide = pie_values)
pie_chart <- plot_ly(labels = ~pie_labels, values = ~pie_values,
type = 'pie', sort = F,
marker = list(colors = c("#fdb462","#8dd3c7","#ffffb3","#bebada","#b3de69",
"#fccde5","#d9d9d9","#9c755f","#d37295","#00ffd0","#9467bd"))) %>%
layout(title = paste0(selected_value),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
legend = list(itemwidth = 15))
pie_chart
}
PIE_CHART_FUNC("val_race_seven", race_diversity_neighborhood)
PIE_CHART_FUNC <- function(input, neigh_df){
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels <- lapply(pie_labels, pie_legend_label_fxn) %>% unlist()
pie_labels <- pie_labels %>% factor(levels = pie_labels, ordered = T)
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
citywide_sample <- tibble(Categories = pie_labels, Citywide = pie_values)
pie_chart <- plot_ly(labels = ~pie_labels, values = ~pie_values,
type = 'pie', sort = F,
marker = list(colors = c("#fdb462","#8dd3c7","#ffffb3","#bebada","#b3de69",
"#fccde5","#d9d9d9","#9c755f","#d37295","#00ffd0","#9467bd"))) %>%
layout(title = paste0(selected_value),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
legend = list(tracegroupgap = 20))
pie_chart
}
PIE_CHART_FUNC("val_race_seven", race_diversity_neighborhood)
PIE_CHART_FUNC <- function(input, neigh_df){
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels <- lapply(pie_labels, pie_legend_label_fxn) %>% unlist()
pie_labels <- pie_labels %>% factor(levels = pie_labels, ordered = T)
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
citywide_sample <- tibble(Categories = pie_labels, Citywide = pie_values)
pie_chart <- plot_ly(labels = ~pie_labels, values = ~pie_values,
type = 'pie', sort = F,
marker = list(colors = c("#fdb462","#8dd3c7","#ffffb3","#bebada","#b3de69",
"#fccde5","#d9d9d9","#9c755f","#d37295","#00ffd0","#9467bd"))) %>%
layout(title = paste0(selected_value),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
legend = list(tracegroupgap = 40))
pie_chart
}
PIE_CHART_FUNC("val_race_seven", race_diversity_neighborhood)
PIE_CHART_FUNC <- function(input, neigh_df){
#do I need to do this?
neigh_df <- neigh_df %>% as_tibble()
#Gets rid of prefix. Used for starts with functionality
selected_value <- str_sub(input, start = 5)
BOs_DF <- neigh_df %>%
filter(tract20_nbhd == "Citywide") %>%
select(starts_with(selected_value))
pie_labels <- colnames(BOs_DF) %>% str_sub(start = str_length(selected_value) + 2) %>% str_replace_all("_", " ")
pie_labels <- lapply(pie_labels, pie_legend_label_fxn) %>% unlist()
pie_labels <- pie_labels %>% factor(levels = pie_labels, ordered = T)
pie_values <- as.numeric(as.vector(BOs_DF[1,]))
citywide_sample <- tibble(Categories = pie_labels, Citywide = pie_values)
pie_chart <- plot_ly(labels = ~pie_labels, values = ~pie_values,
type = 'pie', sort = F,
marker = list(colors = c("#fdb462","#8dd3c7","#ffffb3","#bebada","#b3de69",
"#fccde5","#d9d9d9","#9c755f","#d37295","#00ffd0","#9467bd"))) %>%
layout(title = paste0(selected_value),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
legend = list(tracegroupgap = 200))
pie_chart
}
PIE_CHART_FUNC("val_race_seven", race_diversity_neighborhood)
